# -*- coding: utf-8 -*-
"""Data Types.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Up-4gFUJpt3xlcpgD16XTLT3eFbruGtB

# 1) Numbers
"""

4+2

7-3

4*3

5/2

# mod operator

5%2

9%5

2**3

5**4

# basic order of operations
2+10*10+3

(2+10)*(10+3)

"""# 2) Variable Assignment"""

b = 10

print(b)

b = 'Robert'

print(b)

# Rules to Define Variables
# 1) Variable name will not start with a number
# 2) No white spaces in variable names, use ‘_’ instead
# 3) Variable names are case sensitive
# 4) Can’t use below symbols in variable names,
#      !@#$%^&*(){}<>:”’?/|\~-+

1b = 100

my name = 'Vijay'

my_name = 'Vijay'

print(my_name)

car = 'BMW'
Car = 'Mercedes'
CAR = 'Jaguar'

print(car)
print(Car)
print(CAR)

@b = 10

"""# 3) Strings

## String Basics
"""

'Hello World'

"Hello World"

'150'

print('Hello World')

# Splitting of strings

print('Hello all, welcome to python')

print('Hello all, \nwelcome to python')

print('a, b, c, d, e')

print('\ta, \tb, \tc, \td, \te')

"""## Indexing / Slicing"""

my_string = 'abcde fghij'

print(my_string)

len(my_string)

my_string[2]

my_string[8]

my_string[-1]

my_string[-5]

print(my_string)

my_string[2:]

my_string[:10]

my_string

my_string[1:5]

my_string[1:10]

# step size

print(my_string)

my_string[::]

my_string[::3]

my_string[1:9:2]

my_string[::-1]

"""## String properties and methods"""

name = 'Sam'

name[0] = 'P'

name[1:]

print('P'+name[1:])

x = 'Good'
y = ' Morning'

z = x+y
print(z)

2+3

'2'+'3'

# built in methods

t = 'Thank You'

t.lower()

t.upper()

t.split()

x = 'Hello this is a string'

x.split()

x.split('t')

"""## String Formatting"""

# Hello, my name is Vijay

name = 'Vijay'

print('Hello, my name is '+name)

# .format method

print('Hello, my name is {}'.format('Vijay'))

print('Hello, {} your balance is {}'.format('Tom',100))

print('My favorite fruits are {}, {}, {}'.format('Apple', 'Banana', 'Cherry'))

print('My favorite fruits are {0}, {1}, {2}'.format('Apple', 'Banana', 'Cherry'))

print('My favorite fruits are {2}, {0}, {1}'.format('Apple', 'Banana', 'Cherry'))

print('My favorite fruits are {a}, {b}, {c}'.format(a='Apple', b='Banana', c='Cherry'))

print('My favorite fruits are {c}, {a}, {b}'.format(a='Apple', b='Banana', c='Cherry'))

a='Apple'
b='Banana'
c='Cherry'

print('My favorite fruits are {}, {}, {}'.format(a,b,c))

# f-strings method

b='Tom'

print('My name is {}'.format(b))

print(f'My name is {b}')

name = 'Mark'
age = 24

print(f'{name} is {age} years old')

"""# 4) Lists"""

my_list = ['Hello',100, 27.23]

my_list

len(my_list)

type(my_list)

# list concatination

l = [1,2,3]

new_list = my_list+l

new_list

# empty list

empty_list = []

empty_list

# indexing and slicing

alpha = ['A','B','C','D','E']

alpha[1]

alpha[-1]

alpha[1:4]

# replace values

alpha

alpha[0] = 'Apple'

alpha

alpha[1:3] = ['Banana','Cherry']

alpha

# Add values

alpha.append('Fig')

alpha

# remove values

alpha.remove('Banana')

alpha

n = [10,20,30,40,50]

n.pop()

n

n.pop(0)

n

# adding a list to another

alpha = ['A','B','C']
num = [1,2,3]

alpha.extend(num)

alpha

num

# built-in functions in lists

my_list = [0,2,4,6,8,1,3,5,7,9]
my_list

my_list.sort()

my_list

max(my_list)

min(my_list)

# 1) Concatenation
# 2) Define an empty list
# 3) Indexing/Slicing
# 4) Editing the lists
# 5) Add one list to another
# 6) build-in functions with the lists

"""# 5) Dictionaries"""

my_dict = {'key1':'value1','key2':'value2'}

my_dict

my_dict['key1']

fruits = {'Apple':100, 'Banana':200, 'Cherry':300}

len(fruits)

type(fruits)

d = {'key1':108, 'key2':[10,15,20], 'key3':{'flower':'Rose'}}

d

len(d)

d['key2']

d['key2'][1]

d['key3']

d['key3']['flower']

# editing dictionary

d

d['key1'] = 'new value'

d

d['key4'] = 400

d

d.keys()

d.values()

d.items()

# 1) Define a Dictionary
# 2) Dictionaries with all data types
# 3) Editing Dictionary
# 4) Keys,Values and Items

"""# 6) tuples"""

t = (1,2,3,4,5)

t

len(t)

type(t)

my_tuple = ('Hello',100, 23.50)

my_tuple

# indexing and slicing

alpha = ('A','A','B','B','B','C','D','E')

alpha

alpha[6]

alpha[-1]

alpha[0:3]

alpha.count('B')

alpha.index('B')

# difference between a list and a tuple

l = [1,2,3]

l

t = (1,2,3)

t

l[0] = 'New Element'

l

t[0]='New Element'

"""# 7) Sets"""

my_set = set()

print(my_set)

my_set.add('Hello')

print(my_set)

my_set.add(25)

print(my_set)

l = [1,2,2,3,3,3,4,4,5,6,7,8,8]

print(l)

set(l)

"""# 8) Booleans"""

True

true

False

false

10>7

20<10